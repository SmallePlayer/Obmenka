import numpy as np
import math

# Размер карты (например, 20x20 клеток)
map_width = 50
map_height = 50

# Карта (пустые клетки)
map_grid = np.full((map_height, map_width), '.', dtype=str)

# Позиция робота на карте
robot_x = map_width // 2
robot_y = map_height // 2
robot_angle = 0  # угол робота (в градусах)


# Преобразование полярных координат (расстояние и угол) в декартовы координаты
def polar_to_cartesian(distance, angle):
    # Преобразуем угол в радианы
    angle_rad = math.radians(angle)
    x = int(robot_x + distance * math.cos(angle_rad))
    y = int(robot_y + distance * math.sin(angle_rad))
    return x, y


# Функция обновления карты
def update_map(laser_data):
    for distance, angle in laser_data:
        x, y = polar_to_cartesian(distance, angle)

        # Если координаты в пределах карты, помечаем клетку как занятую
        if 0 <= x < map_width and 0 <= y < map_height:
            map_grid[y, x] = '#'


# Пример данных от лазерного дальномера (расстояние в клетках и угол в градусах)
laser_data = [
    (3, 0),  # Лазерный дальномер на расстоянии 5 клеток в направлении 0° (направо)
    (3, 45),  # Лазерный дальномер на расстоянии 6 клеток в направлении 90° (вверх)
    (3, 90),  # Лазерный дальномер на расстоянии 4 клеток в направлении 180° (налево)
    (3, 135),
    (3, 180),  # Лазерный дальномер на расстоянии 5 клеток в направлении 0° (направо)
    (3, 225),  # Лазерный дальномер на расстоянии 6 клеток в направлении 90° (вверх)
    (3, 270),  # Лазерный дальномер на расстоянии 4 клеток в направлении 180° (налево)
    (3, 315),
    # Лазерный дальномер на расстоянии 7 клеток в направлении 270° (вниз)
]

# Обновляем карту
update_map(laser_data)


# Функция для вывода карты в терминал
def print_map():
    for row in map_grid:
        print(" ".join(row))


# Отображаем карту в терминале
print_map()
